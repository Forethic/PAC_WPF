<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Resource.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Converter.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{StaticResource Default_FontFamily}" />
        <Setter Property="SnapsToDevicePixels" Value="{StaticResource Default_SnapsToDevicePixels}" />
        <Setter Property="FontSize" Value="{StaticResource Default_FontSize}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="local:ButtonHelper.WaitingContent" Value="{StaticResource Button_WaitingContent}" />
        <Setter Property="Background" Value="#555555" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="local:ButtonHelper.HorverBrush" Value="#3E3E3E" />
        <Setter Property="local:ButtonHelper.ClickCoverBrush" Value="#22FFFFFF"/>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4"/>
            </Trigger>

            <DataTrigger Binding="{Binding Path=(local:ButtonHelper.ButtongStyle), RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"
                         Value="Standard">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="GrdMain">
                                <Border x:Name="BdrBack"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding Path=(local:ButtonHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}" />
                                <Border x:Name="BdrHover"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{Binding Path=(local:ButtonHelper.HorverBrush), RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                        CornerRadius="{Binding Path=(local:ButtonHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                        Opacity="0"/>
                                <Border x:Name="BdrClickCover"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{Binding Path=(local:ButtonHelper.ClickCoverBrush), RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                        CornerRadius="{Binding Path=(local:ButtonHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                        Visibility="Hidden"/>
                                <Grid x:Name="GrdContent"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="LblIcon"
                                           Content="{Binding Path=(local:ButtonHelper.Icon), Converter={StaticResource IconConverter}, RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                           Foreground="{TemplateBinding Foreground}"
                                           FontFamily="/Panuon.UI.Silver;component/Resources/#fontawesome"
                                           VerticalAlignment="Center"/>
                                    <ContentPresenter x:Name="Content"
                                                      Grid.Column="1"
                                                      ContentSource="Content"
                                                      VerticalAlignment="Center" />
                                </Grid>
                                <Grid x:Name="GrdWaiting"
                                      Visibility="Collapsed"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <local:Loading x:Name="Loading"
                                                   Margin="0 0 5 0"
                                                   StrokeCover="{TemplateBinding Foreground}"
                                                   Width="20"
                                                   Height="20" />
                                    <ContentPresenter Grid.Column="1"
                                                      Content="{Binding Path=(local:ButtonHelper.WaitingContent),Converter={StaticResource IconConverter}, RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                                      VerticalAlignment="Center" />
                                </Grid>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard >
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="BdrHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="{StaticResource Button_ShadeDuration}"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="BdrHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 Duration="{StaticResource Button_ShadeDuration}"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Visibility" TargetName="BdrClickCover" Value="Visible" />
                                </Trigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                        <Condition Binding="{Binding Path=(local:ButtonHelper.ClickStyle), RelativeSource={RelativeSource Mode=Self}}" Value="Sink" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="GrdMain" Property="Margin" Value="0 1 0 -1" />
                                </MultiDataTrigger>

                                <DataTrigger Binding="{Binding Path=(local:ButtonHelper.Icon), RelativeSource={RelativeSource Mode=Self}}" Value="{x:Null}">
                                    <Setter TargetName="LblIcon" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Path=(local:ButtonHelper.IsWaiting), RelativeSource={RelativeSource Mode=Self}}" Value="True">
                                    <Setter TargetName="GrdWaiting" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="GrdContent" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="Loading" Property="IsRunning" Value="True" />
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(local:ButtonHelper.IsWaiting), RelativeSource={RelativeSource Mode=Self}}" Value="False"/>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity" Value="0.3" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(local:ButtonHelper.ButtongStyle), RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"
                         Value="Hollow">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="#555555" />
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="#3E3E3E" />
                <Setter Property="local:ButtonHelper.HorverBrush" Value="#1E1E1E" />
                <Setter Property="local:ButtonHelper.ClickCoverBrush" Value="#22FFFFFF" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="GrdMain">
                                <Border x:Name="BdrBack"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding Path=(local:ButtonHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}" />
                                <Border x:Name="BdrHover"
                                        BorderBrush="Transparent"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{Binding Path=(local:ButtonHelper.HorverBrush), RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                        CornerRadius="{Binding Path=(local:ButtonHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                        Opacity="0"/>
                                <Border x:Name="BdrClickCover"
                                        BorderBrush="Transparent"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{Binding Path=(local:ButtonHelper.ClickCoverBrush), RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                        CornerRadius="{Binding Path=(local:ButtonHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                        Visibility="Hidden"/>
                                <Grid x:Name="GrdContent"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="LblIcon"
                                           Content="{Binding Path=(local:ButtonHelper.Icon), Converter={StaticResource IconConverter}, RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                           Foreground="{TemplateBinding Foreground}"
                                           FontFamily="/Panuon.UI.Silver;component/Resources/#fontawesome"
                                           VerticalAlignment="Center"/>
                                    <ContentPresenter x:Name="Content"
                                                      Grid.Column="1"
                                                      ContentSource="Content"
                                                      VerticalAlignment="Center" />
                                </Grid>
                                <Grid x:Name="GrdWaiting"
                                      Visibility="Collapsed"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <local:Loading x:Name="Loading"
                                                   Margin="0 0 5 0"
                                                   StrokeCover="{TemplateBinding Foreground}"
                                                   Width="20"
                                                   Height="20" />
                                    <ContentPresenter Grid.Column="1"
                                                      Content="{Binding Path=(local:ButtonHelper.WaitingContent),Converter={StaticResource IconConverter}, RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                                      VerticalAlignment="Center" />
                                </Grid>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard >
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="BdrHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="{StaticResource Button_ShadeDuration}"/>
                                                <DoubleAnimation Storyboard.TargetName="BdrBack"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="{StaticResource Button_ShadeDuration}"/>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                To="#FFFFFF"
                                                                Duration="{StaticResource Button_ShadeDuration}"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="BdrHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 Duration="{StaticResource Button_ShadeDuration}"/>
                                                <DoubleAnimation Storyboard.TargetName="BdrBack"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 Duration="{StaticResource Button_ShadeDuration}"/>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                Duration="{StaticResource Button_ShadeDuration}"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Visibility" TargetName="BdrClickCover" Value="Visible" />
                                </Trigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                        <Condition Binding="{Binding Path=(local:ButtonHelper.ClickStyle), RelativeSource={RelativeSource Mode=Self}}" Value="Sink" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="GrdMain" Property="Margin" Value="0 1 0 -1" />
                                </MultiDataTrigger>

                                <DataTrigger Binding="{Binding Path=(local:ButtonHelper.Icon), RelativeSource={RelativeSource Mode=Self}}" Value="{x:Null}">
                                    <Setter TargetName="LblIcon" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Path=(local:ButtonHelper.IsWaiting), RelativeSource={RelativeSource Mode=Self}}" Value="True">
                                    <Setter TargetName="GrdWaiting" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="GrdContent" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="Loading" Property="IsRunning" Value="True" />
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(local:ButtonHelper.IsWaiting), RelativeSource={RelativeSource Mode=Self}}" Value="False"/>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity" Value="0.3" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(local:ButtonHelper.ButtongStyle), RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"
                         Value="Outline">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="#AAAAAA" />
                <Setter Property="local:ButtonHelper.HorverBrush" Value="#3E3E3E" />
                <Setter Property="local:ButtonHelper.ClickCoverBrush" Value="#22FFFFFF" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="GrdMain">
                                <Border x:Name="BdrBack"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding Path=(local:ButtonHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}" />
                                <Border x:Name="BdrHover"
                                        BorderBrush="{Binding Path=(local:ButtonHelper.HorverBrush), RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding Path=(local:ButtonHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                        Opacity="0"/>
                                <Border x:Name="BdrClick"
                                        BorderBrush="{Binding Path=(local:ButtonHelper.HorverBrush), RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding Path=(local:ButtonHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                        Visibility="Hidden"/>
                                <Grid x:Name="GrdContent"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="LblIcon"
                                           Content="{Binding Path=(local:ButtonHelper.Icon), Converter={StaticResource IconConverter}, RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                           Foreground="{TemplateBinding Foreground}"
                                           FontFamily="/Panuon.UI.Silver;component/Resources/#fontawesome"
                                           VerticalAlignment="Center"/>
                                    <ContentPresenter x:Name="Content"
                                                      Grid.Column="1"
                                                      ContentSource="Content"
                                                      VerticalAlignment="Center" />
                                </Grid>
                                <Grid x:Name="GrdContentHover"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Opacity="0"
                                      Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="LblIconHover"
                                           Content="{Binding Path=(local:ButtonHelper.Icon), Converter={StaticResource IconConverter}, RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                           Foreground="{Binding Path=(local:ButtonHelper.HorverBrush), RelativeSource={RelativeSource AncestorType=Button},Mode=OneWay}"
                                           FontFamily="/Panuon.UI.Silver;component/Resources/#fontawesome"
                                           VerticalAlignment="Center"/>
                                    <ContentControl Grid.Column="1"
                                                    x:Name="ContentHover"
                                                    Content="{TemplateBinding Content}"
                                                    FontSize="{TemplateBinding FontSize}"
                                                    Foreground="{Binding Path=(local:ButtonHelper.HorverBrush), RelativeSource={RelativeSource AncestorType=Button},Mode=OneWay}"
                                                    FontFamily="{TemplateBinding FontFamily}"
                                                    VerticalAlignment="Center"/>
                                </Grid>
                                <Grid x:Name="GrdContentClick"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Visibility="Hidden"
                                      Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="LblIconClick"
                                           Content="{Binding Path=(local:ButtonHelper.Icon),Converter={StaticResource IconConverter}, RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                           Foreground="{Binding Path=(local:ButtonHelper.ClickCoverBrush),RelativeSource={RelativeSource AncestorType=Button},Mode=OneWay}"
                                           FontFamily="/Panuon.UI.Silver;component/Resources/#fontawesome"
                                           VerticalAlignment="Center"/>
                                    <ContentControl Grid.Column="1"
                                                    x:Name="ContentClick"
                                                    Foreground="{Binding Path=(local:ButtonHelper.ClickCoverBrush),RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                                    Content="{TemplateBinding Content}"
                                                    FontSize="{TemplateBinding FontSize}"
                                                    FontFamily="{TemplateBinding FontFamily}"
                                                    VerticalAlignment="Center"/>
                                </Grid>
                                <Grid x:Name="GrdWaiting"
                                      Visibility="Collapsed"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <local:Loading x:Name="Loading"
                                                   Margin="0 0 5 0"
                                                   StrokeCover="{TemplateBinding Foreground}"
                                                   Width="20"
                                                   Height="20" />
                                    <ContentPresenter Grid.Column="1"
                                                      Content="{Binding Path=(local:ButtonHelper.WaitingContent),Converter={StaticResource IconConverter}, RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                                      VerticalAlignment="Center" />
                                </Grid>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard >
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="BdrHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="{StaticResource Button_ShadeDuration}"/>
                                                <DoubleAnimation Storyboard.TargetName="BdrBack"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="{StaticResource Button_ShadeDuration}"/>
                                                <DoubleAnimation Storyboard.TargetName="GrdContentHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="{StaticResource Button_ShadeDuration}"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="BdrHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 Duration="{StaticResource Button_ShadeDuration}"/>
                                                <DoubleAnimation Storyboard.TargetName="BdrBack"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 Duration="{StaticResource Button_ShadeDuration}"/>
                                                <DoubleAnimation Storyboard.TargetName="GrdContentHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 Duration="{StaticResource Button_ShadeDuration}"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Visibility" TargetName="BdrClick" Value="Visible" />
                                    <Setter Property="Visibility" TargetName="GrdContentClick" Value="Visible" />
                                </Trigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                        <Condition Binding="{Binding Path=(local:ButtonHelper.ClickStyle), RelativeSource={RelativeSource Mode=Self}}" Value="Sink" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="GrdMain" Property="Margin" Value="0 1 0 -1" />
                                </MultiDataTrigger>

                                <DataTrigger Binding="{Binding Path=(local:ButtonHelper.Icon), RelativeSource={RelativeSource Mode=Self}}" Value="{x:Null}">
                                    <Setter TargetName="LblIcon" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="LblIconHover" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="LblIconClick" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Path=(local:ButtonHelper.IsWaiting), RelativeSource={RelativeSource Mode=Self}}" Value="True">
                                    <Setter TargetName="GrdWaiting" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="GrdContent" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="GrdContentHover" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="GrdContentClick" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="Loading" Property="IsRunning" Value="True" />
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(local:ButtonHelper.IsWaiting), RelativeSource={RelativeSource Mode=Self}}" Value="False"/>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity" Value="0.3" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(local:ButtonHelper.ButtongStyle), RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"
                         Value="Link">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="#AAAAAA" />
                <Setter Property="local:ButtonHelper.HorverBrush" Value="#1E1E1E" />
                <Setter Property="local:ButtonHelper.ClickCoverBrush" Value="#22FFFFFF" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="GrdMain"
                                  Background="{TemplateBinding Background}">
                                <Grid x:Name="GrdContent"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="LblIcon"
                                           Content="{Binding Path=(local:ButtonHelper.Icon), Converter={StaticResource IconConverter}, RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                           Foreground="{TemplateBinding Foreground}"
                                           FontFamily="/Panuon.UI.Silver;component/Resources/#fontawesome"
                                           VerticalAlignment="Center"/>
                                    <ContentPresenter x:Name="Content"
                                                      Grid.Column="1"
                                                      ContentSource="Content"
                                                      VerticalAlignment="Center" />
                                </Grid>
                                <Grid x:Name="GrdContentHover"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Opacity="0"
                                      Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="LblIconHover"
                                           Content="{Binding Path=(local:ButtonHelper.Icon), Converter={StaticResource IconConverter}, RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                           Foreground="{Binding Path=(local:ButtonHelper.HorverBrush),RelativeSource={RelativeSource AncestorType=Button},Mode=OneWay}"
                                           FontFamily="/Panuon.UI.Silver;component/Resources/#fontawesome"
                                           VerticalAlignment="Center"/>
                                    <ContentControl Grid.Column="1"
                                                    x:Name="ContentHover"
                                                    Content="{TemplateBinding Content}"
                                                    FontSize="{TemplateBinding FontSize}"
                                                    Foreground="{Binding Path=(local:ButtonHelper.HorverBrush),RelativeSource={RelativeSource AncestorType=Button},Mode=OneWay}"
                                                    FontFamily="{TemplateBinding FontFamily}"
                                                    VerticalAlignment="Center"/>
                                </Grid>
                                <Grid x:Name="GrdContentClick"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Visibility="Hidden"
                                      Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="LblIconClick"
                                           Content="{Binding Path=(local:ButtonHelper.Icon),Converter={StaticResource IconConverter}, RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                           Foreground="{Binding Path=(local:ButtonHelper.ClickCoverBrush), RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                           FontFamily="/Panuon.UI.Silver;component/Resources/#fontawesome"
                                           VerticalAlignment="Center"/>
                                    <ContentControl Grid.Column="1"
                                                    x:Name="ContentClick"
                                                    Foreground="{Binding Path=(local:ButtonHelper.ClickCoverBrush),RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                                    Content="{TemplateBinding Content}"
                                                    FontSize="{TemplateBinding FontSize}"
                                                    FontFamily="{TemplateBinding FontFamily}"
                                                    VerticalAlignment="Center"/>
                                </Grid>
                                <Grid x:Name="GrdWaiting"
                                        Visibility="Collapsed"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <local:Loading x:Name="Loading"
                                                    Margin="0 0 5 0"
                                                    StrokeCover="{TemplateBinding Foreground}"
                                                    Width="20"
                                                    Height="20" />
                                    <ContentPresenter Grid.Column="1"
                                                        Content="{Binding Path=(local:ButtonHelper.WaitingContent),Converter={StaticResource IconConverter}, RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}"
                                                        VerticalAlignment="Center" />
                                </Grid>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard >
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="GrdContentHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="{StaticResource Button_ShadeDuration}"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="GrdContentHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 Duration="{StaticResource Button_ShadeDuration}"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Visibility" TargetName="GrdContentClick" Value="Visible" />
                                </Trigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                        <Condition Binding="{Binding Path=(local:ButtonHelper.ClickStyle), RelativeSource={RelativeSource Mode=Self}}" Value="Sink" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="GrdMain" Property="Margin" Value="0 1 0 -1" />
                                </MultiDataTrigger>

                                <DataTrigger Binding="{Binding Path=(local:ButtonHelper.Icon), RelativeSource={RelativeSource Mode=Self}}" Value="{x:Null}">
                                    <Setter TargetName="LblIcon" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="LblIconHover" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="LblIconClick" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Path=(local:ButtonHelper.IsWaiting), RelativeSource={RelativeSource Mode=Self}}" Value="True">
                                    <Setter TargetName="GrdWaiting" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="GrdContent" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="GrdContentHover" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="GrdContentClick" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="Loading" Property="IsRunning" Value="True" />
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(local:ButtonHelper.IsWaiting), RelativeSource={RelativeSource Mode=Self}}" Value="False"/>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity" Value="0.3" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

        </Style.Triggers>

    </Style>

</ResourceDictionary>